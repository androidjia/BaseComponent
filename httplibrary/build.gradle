plugins {
    id 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    api ("io.reactivex.rxjava2:rxandroid:${rootProject.ext.dependencies.rxandroid2}"){
        exclude group: 'org.reactivestreams'
    }
    api ("io.reactivex.rxjava2:rxjava:${rootProject.ext.dependencies.rxjava2}"){
        exclude group: 'org.reactivestreams'
    }
    api "com.squareup.retrofit2:retrofit:${rootProject.ext.dependencies.retrofit2}"
    implementation ("com.squareup.retrofit2:converter-gson:${rootProject.ext.dependencies.retrofit2}"){
        exclude group:'com.google.code.gson'
        exclude group: 'com.squareup.okhttp3'
    }
    implementation "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.dependencies.retrofit2}"
//    implementation "com.squareup.retrofit2:converter-scalars:${rootProject.ext.dependencies.retrofit2}"
//    api "com.squareup.retrofit2:adapter-java8:${rootProject.ext.dependencies.retrofit2}"
    api "com.google.code.gson:gson:${rootProject.ext.dependencies.gson}"
}